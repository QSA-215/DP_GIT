services:
  redis:
    image: redis:latest
    container_name: redisValuator
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    restart: unless-stopped
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
    restart: unless-stopped
    networks:
      - app_network

  rank_calculator:
    build:
      context: .
      dockerfile: RankCalculator/Dockerfile
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app_network

  events_logger_1:
    build:
      context: .
      dockerfile: EventsLogger/Dockerfile
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app_network

  events_logger_2:
    build:
      context: .
      dockerfile: EventsLogger/Dockerfile
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app_network

  server1:
    volumes:
      - data-protection-keys:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: Valuator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
    ports:
      - "5001:5001"
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app_network

  server2:
    volumes:
      - data-protection-keys:/root/.aspnet/DataProtection-Keys
    build:
      context: .
      dockerfile: Valuator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
    ports:
      - "5002:5002"
    depends_on:
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - server1
      - server2
    restart: unless-stopped
    networks:
      - app_network

volumes:
  data-protection-keys:


networks:
  app_network:
    driver: bridge
